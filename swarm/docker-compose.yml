services:
  core:
    image: giraffejump/giraffe_core:${VERSION}
    container_name: giraffe_core
    command: start web
    deploy:
      mode: replicated
      replicas: 1
      # resources:
        # limits:
          # cpus: "1"
          # memory: 1536M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==worker"
    env_file: .env
    healthcheck:
      test: "check http://localhost:8080/api/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    volumes:
      - ${VOLUME_DIR}/core/data:/opt/giraffe/data
    networks:
      - net

  celery:
    image: giraffejump/giraffe_core:${VERSION}
    container_name: giraffe_celery
    command: start task
    deploy:
      mode: replicated
      replicas: 1
      # resources:
        # limits:
          # cpus: "0.2"
          # memory: 1024M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==worker"
    env_file: .env
    healthcheck:
      test: "bash /opt/giraffejump/utils/check_celery.sh"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - ${VOLUME_DIR}/core/data:/opt/giraffejump/data
    networks:
      - net

  koko:
    image: giraffejump/giraffe_koko:${VERSION}
    container_name: giraffe_koko
    privileged: true
    deploy:
      mode: replicated
      replicas: 1
      # resources:
        # limits:
          # cpus: "0.1"
          # memory: 128M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==worker"
    env_file: .env
    healthcheck:
      test: "check http://localhost:5000/koko/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ${VOLUME_DIR}/koko/data:/opt/koko/data
    ports:
      - ${SSH_PORT:-2222}:${SSH_PORT:-2222}
    networks:
      - net

  guacd:
    image: giraffejump/guacd:1.5.5-bookworm
    container_name: giraffe_guacd
    user: root
    deploy:
      mode: replicated
      replicas: 1
      # resources:
        # limits:
          # cpus: "0.1"
          # memory: 128M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==worker"
    env_file: .env
    volumes:
      - ${VOLUME_DIR}/lion/data:/opt/lion/data
    networks:
      - net

  lion:
    image: giraffejump/giraffe_lion:${VERSION}
    container_name: giraffe_lion
    deploy:
      mode: replicated
      replicas: 1
      # resources:
        # limits:
          # cpus: "0.1"
          # memory: 128M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==worker"
    env_file: .env
    healthcheck:
      test: "check http://localhost:8081/lion/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ${VOLUME_DIR}/lion/data:/opt/lion/data
    networks:
      - net

  chen:
    image: giraffejump/giraffe_chen:${VERSION}
    container_name: giraffe_chen
    deploy:
      mode: replicated
      replicas: 1
      # resources:
        # limits:
          # cpus: "0.1"
          # memory: 128M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==worker"
    env_file: .env
    volumes:
      - ${VOLUME_DIR}/chen/data:/opt/chen/data
    healthcheck:
      test: "check http://localhost:8082/chen"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    networks:
      - net

  web:
    image: giraffejump/giraffe_web:${VERSION}
    container_name: giraffe_web
    deploy:
      mode: replicated
      replicas: 1
      # resources:
        # limits:
          # cpus: "0.1"
          # memory: 128M
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==worker"
    env_file: .env
    healthcheck:
      test: "check http://localhost/api/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ${VOLUME_DIR}/core/data:/opt/giraffejump/data
      - ${VOLUME_DIR}/web/data/logs:/var/log/nginx
      - ${VOLUME_DIR}/web/download:/opt/download
    ports:
      - ${HTTP_PORT:-80}:80
    networks:
      - net
